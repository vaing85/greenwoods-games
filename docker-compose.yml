version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: greenwood_mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: greenwood_games
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./scripts/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - greenwood_network

  # Backend Server
  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: greenwood_server
    restart: unless-stopped
    environment:
      NODE_ENV: production
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/greenwood_games?authSource=admin
      JWT_SECRET: ${JWT_SECRET:-your-production-jwt-secret}
      SESSION_SECRET: ${SESSION_SECRET:-your-production-session-secret}
      PORT: 5000
    ports:
      - "5000:5000"
    depends_on:
      - mongodb
    volumes:
      - ./server:/app
      - /app/node_modules
    networks:
      - greenwood_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend Web Application
  web:
    build:
      context: ./web
      dockerfile: Dockerfile
    container_name: greenwood_web
    restart: unless-stopped
    environment:
      NODE_ENV: production
      REACT_APP_API_URL: http://localhost:5000
    ports:
      - "3000:3000"
    depends_on:
      - server
    volumes:
      - ./web:/app
      - /app/node_modules
    networks:
      - greenwood_network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: greenwood_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - web
      - server
    networks:
      - greenwood_network

  # Prometheus Monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: greenwood_prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - greenwood_network

  # Grafana Dashboard
  grafana:
    image: grafana/grafana:latest
    container_name: greenwood_grafana
    restart: unless-stopped
    ports:
      - "3001:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin123
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
    depends_on:
      - prometheus
    networks:
      - greenwood_network

volumes:
  mongodb_data:
  prometheus_data:
  grafana_data:

networks:
  greenwood_network:
    driver: bridge
