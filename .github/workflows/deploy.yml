name: üöÄ Deploy to Production Server

on:
  push:
    branches: [ main, master ]
  workflow_dispatch: # Allow manual deployment

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: üì• Checkout code
      uses: actions/checkout@v4
      
    - name: üîß Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: üì¶ Install dependencies
      run: |
        cd server && npm ci --only=production
        cd ../web && npm ci --only=production
        
    - name: üèóÔ∏è Build web application
      run: |
        cd web
        npm run build
        
    - name: üì§ Deploy to server
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        port: ${{ secrets.SERVER_PORT || 22 }}
        script: |
          # Create deployment directory
          mkdir -p /opt/greenwood-games
          cd /opt/greenwood-games
          
          # Stop existing services
          docker-compose -f docker-compose.prod.yml down || true
          
    - name: üìÅ Upload files
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        port: ${{ secrets.SERVER_PORT || 22 }}
        source: "."
        target: "/opt/greenwood-games"
        strip_components: 1
        exclude: |
          node_modules
          .git
          .github
          *.md
          deploy*.sh
          deploy*.ps1
          *.log
          .env
          .env.*
          temp_deploy_*
          
    - name: üöÄ Start services
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        port: ${{ secrets.SERVER_PORT || 22 }}
        script: |
          cd /opt/greenwood-games
          
          # Set up environment
          cp env.example .env
          
          # Start services
          docker-compose -f docker-compose.prod.yml up -d --build
          
          # Wait for services to be ready
          sleep 30
          
          # Check service status
          docker-compose -f docker-compose.prod.yml ps
          
          # Configure Nginx
          cp nginx/nginx-http.conf /etc/nginx/sites-available/default
          systemctl restart nginx
          
    - name: ‚úÖ Health check
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        port: ${{ secrets.SERVER_PORT || 22 }}
        script: |
          # Test web app
          curl -f http://localhost || exit 1
          echo "‚úÖ Web app is running"
          
          # Test API
          curl -f http://localhost:5000/health || exit 1
          echo "‚úÖ API is running"
          
          echo "üéâ Deployment successful!"
          echo "üåê Casino is live at: http://${{ secrets.SERVER_HOST }}"